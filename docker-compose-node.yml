version: "3.1"

services:
  mongo:
    image: mongo:latest
    container_name: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongofiles/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${DB_ROOT_USER}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${DB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=adminPass


  server_node:
    image: nodejs:latest
    container_name: server_node
    restart: always
    volumes:
      - ./server_node:/server_node
      - /server_node/node_modules
    build:
      context: ./server_node
      dockerfile: DockerfileNode
    ports:
      - 8000:8000
    environment:
      - SERVER_MONGO_URI=${SERVER_MONGO_URI}
      - MONGO_USER=${DB_ROOT_USER}
      - MONGO_PASS=${DB_ROOT_PASSWORD}
      - ADMIN_PASS=${ADMIN_PASS}
    command: node server.js
    depends_on:
      - mongo

  react:
    restart: always
    image: react
    container_name: react
    build:
      context: ./app
      dockerfile: ./DockerfileReact
    ports:
      - 3000:3000
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./app:/app
      - /app/node_modules
    depends_on:
      - server_node

volumes:
  mongo-data: